{"version":3,"sources":["Media.js","App.js","serviceWorker.js","index.js","mystyle.module.css"],"names":["Media","props","state","startDate","Date","handleChange","bind","date","this","setState","className","styles","borderA","Navbar","Aborder","bg","class","nav","upperBlock","border","innerUpper","calendar","selected","onChange","name","dateFormat","aria-hidden","font","input1","placeholder","input2","innerLower","attach","imageTitle","videoTitle","icon","vicon","lowerBlock","innerBottom","carema","micro","image","cameraTitle","voiceTitle","Title","button","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"oOAMqBA,G,8DACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,IAAIC,MAEnB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBALL,E,yDAONC,GACTC,KAAKC,SAAS,CACVN,UAAWI,M,+BAIf,OACI,yBAAKG,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,YACf,yBAAKA,UAAWC,IAAOC,SAEnB,kBAACC,EAAA,EAAD,CAAQH,UAAWC,IAAOG,QAASC,GAAG,SAClC,uBAAGC,MAAM,6BACT,wBAAIN,UAAWC,IAAOM,KAAtB,6BAEJ,yBAAKP,UAAWC,IAAOO,YACnB,yBAAKR,UAAWC,IAAOQ,QACvB,yBAAKT,UAAWC,IAAOS,YACnB,yBAAKV,UAAWC,IAAOU,UACnB,0BAAMX,UAAWC,IAAOJ,MACpB,kBAAC,IAAD,CACIe,SAAUd,KAAKN,MAAMC,UACrBoB,SAAUf,KAAKH,aACfmB,KAAK,YACLC,WAAW,gBAGnB,uBAAGT,MAAM,iBAAiBU,cAAY,UAE1C,uBAAGhB,UAAWC,IAAOgB,MAArB,sBACA,2BAAOjB,UAAWC,IAAOiB,OAAQC,YAAY,qBAC7C,8BAAUnB,UAAWC,IAAOmB,OAAQD,YAAY,8BAGpD,yBAAKnB,UAAWC,IAAOoB,YACnB,yBAAKrB,UAAU,cAAa,uBAAGM,MAAM,qBACrC,wBAAIN,UAAWC,IAAOqB,QAAtB,eACA,uBAAGtB,UAAWC,IAAOsB,YAArB,SACA,uBAAGvB,UAAWC,IAAOuB,YAArB,SACA,6BACA,0BAAMxB,UAAWC,IAAOwB,MAAM,uBAAGnB,MAAM,iBACvC,0BAAMN,UAAWC,IAAOyB,OAAO,uBAAGpB,MAAM,0BAGhD,yBAAKN,UAAWC,IAAO0B,YACnB,yBAAK3B,UAAWC,IAAO2B,aACnB,0BAAM5B,UAAWC,IAAO4B,QAAQ,uBAAGvB,MAAM,kBACzC,0BAAMN,UAAWC,IAAO6B,OAAO,uBAAGxB,MAAM,sBACxC,0BAAMN,UAAWC,IAAO8B,OAAO,uBAAGzB,MAAM,iBACxC,6BACA,wBAAIN,UAAWC,IAAO+B,aAAtB,mBACA,wBAAIhC,UAAWC,IAAOgC,YAAtB,aACA,wBAAIjC,UAAWC,IAAOiC,OAAtB,gBACA,4BAAQlC,UAAWC,IAAOkC,QAA1B,6B,GA9DGC,cCHdC,E,uKAIf,OACE,6BACE,kBAAC,EAAD,W,GANuBD,aCSbE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5BC,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,sBAAsB,WAAa,4BAA4B,WAAa,4BAA4B,WAAa,4BAA4B,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,OAAS,wBAAwB,WAAa,4BAA4B,WAAa,4BAA4B,KAAO,sBAAsB,MAAQ,uBAAuB,gBAAkB,iCAAiC,gBAAkB,iCAAiC,YAAc,6BAA6B,MAAQ,uBAAuB,OAAS,wBAAwB,MAAQ,uBAAuB,YAAc,6BAA6B,WAAa,4BAA4B,MAAQ,uBAAuB,OAAS,wBAAwB,KAAO,wB","file":"static/js/main.e8e2b53f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Navbar, ListGroup } from 'react-bootstrap';\r\nimport styles from './mystyle.module.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default class Media extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            startDate: new Date()\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(date) {\r\n        this.setState({\r\n            startDate: date\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-4\" ></div>\r\n                    <div className=\"col-md-4\">\r\n                    <div className={styles.borderA}>\r\n\r\n                        <Navbar className={styles.Aborder} bg=\"light\">\r\n                            <i class=\"fa fa-chevron-left fa-lg\"></i>\r\n                            <h6 className={styles.nav}>Create Homework (Sciene)</h6>\r\n                        </Navbar>\r\n                        <div className={styles.upperBlock}>\r\n                            <div className={styles.border}>\r\n                            <div className={styles.innerUpper}>\r\n                                <div className={styles.calendar}>\r\n                                    <span className={styles.date}>\r\n                                        <DatePicker\r\n                                            selected={this.state.startDate}\r\n                                            onChange={this.handleChange}\r\n                                            name=\"startDate\"\r\n                                            dateFormat=\"dd/MM/yyyy\"\r\n                                        />\r\n                                    </span>\r\n                                    <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                                <p className={styles.font}>Homework due date:</p>\r\n                                <input className={styles.input1} placeholder=\"Enter title here\"></input>\r\n                                <textarea className={styles.input2} placeholder=\"Enter user remarks here\"></textarea>\r\n                            </div>\r\n                            </div>\r\n                            <div className={styles.innerLower}>\r\n                                <div className=\"float-left\"><i class=\"fa fa-paperclip\"></i></div>\r\n                                <h6 className={styles.attach}>Attachments</h6>\r\n                                <p className={styles.imageTitle}>Image</p>\r\n                                <p className={styles.videoTitle}>Video</p>\r\n                                <br></br>\r\n                                <span className={styles.icon}><i class=\"fa fa-image\"></i></span>\r\n                                <span className={styles.vicon}><i class=\"fa fa-file-video-o\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.lowerBlock}>\r\n                            <div className={styles.innerBottom}>\r\n                                <span className={styles.carema}><i class=\"fa fa-camera\"></i></span>\r\n                                <span className={styles.micro}><i class=\"fa fa-microphone\"></i></span>\r\n                                <span className={styles.image}><i class=\"fa fa-image\"></i></span>\r\n                                <br></br>\r\n                                <h6 className={styles.cameraTitle}>Add from camera</h6>\r\n                                <h6 className={styles.voiceTitle}>Add voice</h6>\r\n                                <h6 className={styles.Title}>From gallery</h6>\r\n                                <button className={styles.button}>SEND TO STUDENTS</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Media from './Media';\n\nexport default class App extends Component {\n \n\n  render(){    \n      return ( \n        <div> \n          <Media />           \n        </div> \n    );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"mystyle_border__3HDNg\",\"Aborder\":\"mystyle_Aborder__3ndqo\",\"borderA\":\"mystyle_borderA__lOUVz\",\"nav\":\"mystyle_nav__2-sYy\",\"font\":\"mystyle_font__1JAuW\",\"upperBlock\":\"mystyle_upperBlock__1WbWR\",\"lowerBlock\":\"mystyle_lowerBlock__1FXO5\",\"innerUpper\":\"mystyle_innerUpper__1j5Kr\",\"innerLower\":\"mystyle_innerLower__3lX0L\",\"attach\":\"mystyle_attach__wEhYa\",\"calendar\":\"mystyle_calendar__3uqZa\",\"input1\":\"mystyle_input1__1qLy-\",\"input2\":\"mystyle_input2__2kJvP\",\"imageTitle\":\"mystyle_imageTitle__1yqsy\",\"videoTitle\":\"mystyle_videoTitle__21USv\",\"icon\":\"mystyle_icon__2c-X4\",\"vicon\":\"mystyle_vicon__IZR-c\",\"deleteIconImage\":\"mystyle_deleteIconImage__2-cys\",\"deleteIconVideo\":\"mystyle_deleteIconVideo__3v7L6\",\"innerBottom\":\"mystyle_innerBottom__1Ku96\",\"micro\":\"mystyle_micro__3EgDX\",\"carema\":\"mystyle_carema__3CLDC\",\"image\":\"mystyle_image__GZ4jr\",\"cameraTitle\":\"mystyle_cameraTitle__3uBK8\",\"voiceTitle\":\"mystyle_voiceTitle__2yKqg\",\"Title\":\"mystyle_Title__3gDLb\",\"button\":\"mystyle_button__2NhiE\",\"date\":\"mystyle_date__3Xm0z\"};"],"sourceRoot":""}